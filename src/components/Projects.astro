---
import GitHub from "./icons/Github.astro"
import Python from "./icons/Python.astro"
import Tailwind from "./icons/Tailwind.astro"
import ReactJS from "./icons/ReactJS.astro"
import NodeJS from "./icons/NodeJS.astro"
import JavaScript from "./icons/Javascript.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"

const TAGS = {
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  PYTHON: {
    name: "Python",
    class: "bg-[#4584b6] text-[#ffde57]",
    icon: Python,
  },
  REACTJS: {
    name: "ReactJS",
    class: "bg-[#00d8ff] text-white",
    icon: ReactJS,
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-[#f7df1e] text-white",
    icon: JavaScript,
  },
  NODEJS: {
    name: "NodeJS",
    class: "bg-[#6cc24a] text-white",
    icon: NodeJS,
  }
}
const PROJECTS = [
  {
    title: "Polar Multimedia - Administrador de eventos",
    description:
      "Sitio web para administrar los eventos, número de sedes e invitados a ellas, asi como su asistencia",
    link: "https://registropolar.com/",
    github: "https://github.com/PolarMultimedia/events-attendees-management",
    image: "/projects/admineventos.webp",
    tags: [TAGS.TAILWIND, TAGS.REACTJS, TAGS.JAVASCRIPT, TAGS.NODEJS],
  },
  {
    title: "Polar Multimedia - Activacion para stands/eventos",
    description: "Sitio web en el cual se hacen diferentes tipos de preguntas, o incluso escaneo de códigos QR para activaciones en eventos o stands de clientes",
    github: "https://github.com/BurritoQuemado/subasta-stands-frontend",
    image: "/projects/activacion.webp",
    tags: [TAGS.TAILWIND, TAGS.REACTJS, TAGS.JAVASCRIPT, TAGS.NODEJS]
  },
  {
    title: "Polar Multimedia - Album digital",
    description: "Sitio web el cual es un album digital en el cual se va llenando con cartas que se reciben diariamente por correo electronico, estas dependen de su rareza y su oleada.",
    github: "https://github.com/BurritoQuemado/album-digital",
    image: "/projects/album.webp",
    tags: [TAGS.PYTHON, TAGS.JAVASCRIPT]
  }
]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col max-h-[300px] items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt={title} class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>


